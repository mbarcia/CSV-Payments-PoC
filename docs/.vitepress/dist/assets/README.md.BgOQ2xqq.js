/*
 * Copyright (c) 2023-2025 Mariano Barcia
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import{_ as i,c as a,o as t,a2 as s}from"./chunks/framework.BoyqnxIq.js";const u=JSON.parse('{"title":"Pipeline Framework Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),n={name:"README.md"};function r(o,e,l,p,h,d){return t(),a("div",null,[...e[0]||(e[0]=[s(`<h1 id="pipeline-framework-documentation" tabindex="-1">Pipeline Framework Documentation <a class="header-anchor" href="#pipeline-framework-documentation" aria-label="Permalink to &quot;Pipeline Framework Documentation&quot;">​</a></h1><p>Welcome to the comprehensive documentation for the Pipeline Framework. This site provides everything you need to understand, use, and extend the framework for building reactive pipeline processing systems.</p><h2 id="about-the-pipeline-framework" tabindex="-1">About the Pipeline Framework <a class="header-anchor" href="#about-the-pipeline-framework" aria-label="Permalink to &quot;About the Pipeline Framework&quot;">​</a></h2><p>The Pipeline Framework is a powerful tool for building reactive pipeline processing systems. It simplifies the development of distributed systems by providing a consistent way to create, configure, and deploy pipeline steps.</p><h3 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h3><ul><li><strong>Reactive Programming</strong>: Built on top of Mutiny for non-blocking operations</li><li><strong>Annotation-Based Configuration</strong>: Simplifies adapter generation with <code>@PipelineStep</code> and <code>@MapperForStep</code></li><li><strong>gRPC and REST Support</strong>: Automatically generates adapters for both communication protocols</li><li><strong>Modular Design</strong>: Clear separation between runtime and deployment components</li><li><strong>Auto-Generation</strong>: Generates necessary infrastructure at build time</li><li><strong>Observability</strong>: Built-in metrics, tracing, and logging support</li><li><strong>Error Handling</strong>: Comprehensive error handling with DLQ support</li><li><strong>Concurrency Control</strong>: Virtual threads and backpressure management</li></ul><h2 id="documentation-structure" tabindex="-1">Documentation Structure <a class="header-anchor" href="#documentation-structure" aria-label="Permalink to &quot;Documentation Structure&quot;">​</a></h2><h3 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h3><ul><li><a href="/">Introduction</a>: Overview of the framework and its capabilities</li><li><a href="/guide/getting-started.html">Getting Started</a>: Setting up the framework in your project</li><li><a href="/guide/creating-steps.html">Creating Pipeline Steps</a>: Building your first pipeline steps</li></ul><h3 id="guides" tabindex="-1">Guides <a class="header-anchor" href="#guides" aria-label="Permalink to &quot;Guides&quot;">​</a></h3><ul><li><a href="/guide/application-structure.html">Application Structure</a>: Structuring pipeline applications</li><li><a href="/guide/backend-services.html">Backend Services</a>: Creating backend services that implement pipeline steps</li><li><a href="/guide/orchestrator-services.html">Orchestrator Services</a>: Building orchestrator services that coordinate pipelines</li><li><a href="/guide/pipeline-compilation.html">Pipeline Compilation</a>: Understanding how the annotation processor works</li><li><a href="/guide/error-handling.html">Error Handling &amp; DLQ</a>: Managing errors and dead letter queues</li><li><a href="/guide/observability.html">Observability</a>: Monitoring and observing pipeline applications</li></ul><h3 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">​</a></h3><ul><li><a href="/reference/architecture.html">Architecture</a>: Deep dive into the framework architecture</li></ul><h2 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-label="Permalink to &quot;Development&quot;">​</a></h2><p>To run the documentation site locally:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p>The documentation site will be available at <code>http://localhost:5173</code>.</p><h2 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">​</a></h2><p>If you find issues with the documentation or want to contribute improvements:</p><ol><li>Fork the repository</li><li>Make your changes</li><li>Submit a pull request</li></ol><p>All contributions are welcome!</p><p>The site will be available at <a href="http://localhost:5173" target="_blank" rel="noreferrer">http://localhost:5173</a></p><h2 id="building" tabindex="-1">Building <a class="header-anchor" href="#building" aria-label="Permalink to &quot;Building&quot;">​</a></h2><p>To build the static site:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><p>The built site will be in <code>docs/.vitepress/dist</code></p><h2 id="mermaid-diagrams" tabindex="-1">Mermaid Diagrams <a class="header-anchor" href="#mermaid-diagrams" aria-label="Permalink to &quot;Mermaid Diagrams&quot;">​</a></h2><p>This documentation site supports Mermaid diagrams for visualizing workflows and architectures. The site uses the <code>vitepress-plugin-mermaid</code> plugin which enables GitHub-style Mermaid syntax:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\`\`\`mermaid</span></span>
<span class="line"><span>graph TD</span></span>
<span class="line"><span>    A[Input] --&gt; B[Process]</span></span>
<span class="line"><span>    B --&gt; C[Output]</span></span>
<span class="line"><span>\`\`\`</span></span></code></pre></div><p><strong>Note</strong>: Using Mermaid diagrams significantly increases the bundle size (currently ~4.8MB vs 1.5MB without Mermaid) as the plugin includes many different diagram types and their dependencies in the bundle. This is a trade-off between rich visualization capabilities and site performance.</p><h2 id="deployment-to-cloudflare-pages" tabindex="-1">Deployment to Cloudflare Pages <a class="header-anchor" href="#deployment-to-cloudflare-pages" aria-label="Permalink to &quot;Deployment to Cloudflare Pages&quot;">​</a></h2><h3 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h3><ol><li>A Cloudflare account</li><li>The project repository connected to Cloudflare Pages</li></ol><h3 id="build-configuration" tabindex="-1">Build Configuration <a class="header-anchor" href="#build-configuration" aria-label="Permalink to &quot;Build Configuration&quot;">​</a></h3><p>When setting up the project in Cloudflare Pages, use the following Vitepress configuration:</p><ul><li><strong>Build command</strong>: <code>npm run build</code></li><li><strong>Build output directory</strong>: <code>.vitepress/dist</code></li><li><strong>Root directory</strong>: <code>/</code>, <code>docs</code></li></ul><h3 id="new-features" tabindex="-1">New Features <a class="header-anchor" href="#new-features" aria-label="Permalink to &quot;New Features&quot;">​</a></h3><p>The documentation site now includes:</p><ol><li><strong>Search Functionality</strong>: Users can search across all documentation pages using the search bar in the top navigation</li><li><strong>Multi-Version Support</strong>: Documentation is available for multiple versions of the Pipeline Framework: <ul><li>v0.9.0 (current)</li><li>v0.8.0</li><li>v0.7.0</li></ul></li><li><strong>Mermaid Diagram Support</strong>: Rich diagrams for visualizing workflows (with increased bundle size)</li></ol><h3 id="configuration-notes" tabindex="-1">Configuration Notes <a class="header-anchor" href="#configuration-notes" aria-label="Permalink to &quot;Configuration Notes&quot;">​</a></h3><p>The VitePress configuration includes <code>ignoreDeadLinks: true</code> to prevent build failures due to links that are valid in the context of the full project but not within the documentation site. This is necessary because:</p><ol><li>The documentation site only covers the Pipeline Framework, not the entire project</li><li>Many markdown files in the project contain links that are valid in the context of the full repository but aren&#39;t relevant to the documentation site</li><li>There are localhost links in various README files that can&#39;t be resolved during the build process</li></ol><p>This is a common configuration for documentation sites that are part of larger projects.</p><h3 id="manual-deployment-optional" tabindex="-1">Manual Deployment (Optional) <a class="header-anchor" href="#manual-deployment-optional" aria-label="Permalink to &quot;Manual Deployment (Optional)&quot;">​</a></h3><p>If you prefer to deploy manually, you can use Wrangler:</p><ol><li><p>Install Wrangler:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wrangler</span></span></code></pre></div></li><li><p>Build the documentation:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div></li><li><p>Deploy to Cloudflare Pages:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrangler</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pages</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs/.vitepress/dist</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project-name=your-project-name</span></span></code></pre></div></li></ol><h3 id="environment-variables" tabindex="-1">Environment Variables <a class="header-anchor" href="#environment-variables" aria-label="Permalink to &quot;Environment Variables&quot;">​</a></h3><p>No special environment variables are required for the basic setup.</p><h3 id="custom-domain" tabindex="-1">Custom Domain <a class="header-anchor" href="#custom-domain" aria-label="Permalink to &quot;Custom Domain&quot;">​</a></h3><p>After deployment, you can configure a custom domain through the Cloudflare dashboard.</p>`,50)])])}const g=i(n,[["render",r]]);export{u as __pageData,g as default};

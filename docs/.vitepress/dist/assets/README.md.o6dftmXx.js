/*
 * Copyright (c) 2023-2025 Mariano Barcia
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import{_ as a,c as i,o as s,a2 as t}from"./chunks/framework.BoyqnxIq.js";const u=JSON.parse('{"title":"Pipeline Framework Documentation Site","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),n={name:"README.md"};function o(l,e,r,p,h,d){return s(),i("div",null,[...e[0]||(e[0]=[t(`<h1 id="pipeline-framework-documentation-site" tabindex="-1">Pipeline Framework Documentation Site <a class="header-anchor" href="#pipeline-framework-documentation-site" aria-label="Permalink to &quot;Pipeline Framework Documentation Site&quot;">​</a></h1><p>This directory contains the documentation site for the Pipeline Framework, built with VitePress and hosted on Cloudflare Pages.</p><h2 id="content-source" tabindex="-1">Content Source <a class="header-anchor" href="#content-source" aria-label="Permalink to &quot;Content Source&quot;">​</a></h2><p>The main content for this documentation site comes from <a href="./../pipeline-framework/README.html"><code>../pipeline-framework/README.md</code></a>, which serves as the home page. Additional guides and documentation are in this directory.</p><h2 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-label="Permalink to &quot;Development&quot;">​</a></h2><p>To run the documentation site locally:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p>The site will be available at <a href="http://localhost:5173" target="_blank" rel="noreferrer">http://localhost:5173</a></p><h2 id="building" tabindex="-1">Building <a class="header-anchor" href="#building" aria-label="Permalink to &quot;Building&quot;">​</a></h2><p>To build the static site:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><p>The built site will be in <code>docs/.vitepress/dist</code></p><h2 id="mermaid-diagrams" tabindex="-1">Mermaid Diagrams <a class="header-anchor" href="#mermaid-diagrams" aria-label="Permalink to &quot;Mermaid Diagrams&quot;">​</a></h2><p>This documentation site supports Mermaid diagrams for visualizing workflows and architectures. The site uses the <code>vitepress-plugin-mermaid</code> plugin which enables GitHub-style Mermaid syntax:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\`\`\`mermaid</span></span>
<span class="line"><span>graph TD</span></span>
<span class="line"><span>    A[Input] --&gt; B[Process]</span></span>
<span class="line"><span>    B --&gt; C[Output]</span></span>
<span class="line"><span>\`\`\`</span></span></code></pre></div><p><strong>Note</strong>: Using Mermaid diagrams significantly increases the bundle size (currently ~4.8MB vs 1.5MB without Mermaid) as the plugin includes many different diagram types and their dependencies in the bundle. This is a trade-off between rich visualization capabilities and site performance.</p><h2 id="deployment-to-cloudflare-pages" tabindex="-1">Deployment to Cloudflare Pages <a class="header-anchor" href="#deployment-to-cloudflare-pages" aria-label="Permalink to &quot;Deployment to Cloudflare Pages&quot;">​</a></h2><h3 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h3><ol><li>A Cloudflare account</li><li>The project repository connected to Cloudflare Pages</li></ol><h3 id="build-configuration" tabindex="-1">Build Configuration <a class="header-anchor" href="#build-configuration" aria-label="Permalink to &quot;Build Configuration&quot;">​</a></h3><p>When setting up the project in Cloudflare Pages, use the following Vitepress configuration:</p><ul><li><strong>Build command</strong>: <code>npm run build</code></li><li><strong>Build output directory</strong>: <code>.vitepress/dist</code></li><li><strong>Root directory</strong>: <code>/</code>, <code>docs</code></li></ul><h3 id="new-features" tabindex="-1">New Features <a class="header-anchor" href="#new-features" aria-label="Permalink to &quot;New Features&quot;">​</a></h3><p>The documentation site now includes:</p><ol><li><strong>Search Functionality</strong>: Users can search across all documentation pages using the search bar in the top navigation</li><li><strong>Multi-Version Support</strong>: Documentation is available for multiple versions of the Pipeline Framework: <ul><li>v0.9.0 (current)</li><li>v0.8.0</li><li>v0.7.0</li></ul></li><li><strong>Mermaid Diagram Support</strong>: Rich diagrams for visualizing workflows (with increased bundle size)</li></ol><h3 id="configuration-notes" tabindex="-1">Configuration Notes <a class="header-anchor" href="#configuration-notes" aria-label="Permalink to &quot;Configuration Notes&quot;">​</a></h3><p>The VitePress configuration includes <code>ignoreDeadLinks: true</code> to prevent build failures due to links that are valid in the context of the full project but not within the documentation site. This is necessary because:</p><ol><li>The documentation site only covers the Pipeline Framework, not the entire project</li><li>Many markdown files in the project contain links that are valid in the context of the full repository but aren&#39;t relevant to the documentation site</li><li>There are localhost links in various README files that can&#39;t be resolved during the build process</li></ol><p>This is a common configuration for documentation sites that are part of larger projects.</p><h3 id="manual-deployment-optional" tabindex="-1">Manual Deployment (Optional) <a class="header-anchor" href="#manual-deployment-optional" aria-label="Permalink to &quot;Manual Deployment (Optional)&quot;">​</a></h3><p>If you prefer to deploy manually, you can use Wrangler:</p><ol><li><p>Install Wrangler:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wrangler</span></span></code></pre></div></li><li><p>Build the documentation:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div></li><li><p>Deploy to Cloudflare Pages:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrangler</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pages</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs/.vitepress/dist</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project-name=your-project-name</span></span></code></pre></div></li></ol><h3 id="environment-variables" tabindex="-1">Environment Variables <a class="header-anchor" href="#environment-variables" aria-label="Permalink to &quot;Environment Variables&quot;">​</a></h3><p>No special environment variables are required for the basic setup.</p><h3 id="custom-domain" tabindex="-1">Custom Domain <a class="header-anchor" href="#custom-domain" aria-label="Permalink to &quot;Custom Domain&quot;">​</a></h3><p>After deployment, you can configure a custom domain through the Cloudflare dashboard.</p>`,36)])])}const m=a(n,[["render",o]]);export{u as __pageData,m as default};

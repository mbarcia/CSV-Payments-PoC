/*
 * Copyright Â© 2023-2025 Mariano Barcia
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import {
    assert,
    breakpointsAntDesign,
    breakpointsBootstrapV5,
    breakpointsElement,
    breakpointsMasterCss,
    breakpointsPrimeFlex,
    breakpointsQuasar,
    breakpointsSematic,
    breakpointsTailwind,
    breakpointsVuetify,
    breakpointsVuetifyV2,
    breakpointsVuetifyV3,
    bypassFilter,
    camelize,
    clamp,
    cloneFnJSON,
    computedAsync,
    computedEager,
    computedInject,
    computedWithControl,
    containsProp,
    controlledRef,
    createEventHook,
    createFetch,
    createFilterWrapper,
    createGlobalState,
    createInjectionState,
    createRef,
    createReusableTemplate,
    createSharedComposable,
    createSingletonPromise,
    createTemplatePromise,
    createUnrefFn,
    customStorageEventName,
    debounceFilter,
    defaultDocument,
    defaultLocation,
    DefaultMagicKeysAliasMap,
    defaultNavigator,
    defaultWindow,
    executeTransition,
    extendRef,
    formatDate,
    formatTimeAgo,
    get,
    getLifeCycleTarget,
    getSSRHandler,
    hasOwn,
    hyphenate,
    identity,
    increaseWithUnit,
    injectLocal,
    invoke,
    isClient,
    isDef,
    isDefined,
    isIOS,
    isObject,
    isWorker,
    makeDestructurable,
    mapGamepadToXbox360Controller,
    noop,
    normalizeDate,
    notNullish,
    now,
    objectEntries,
    objectOmit,
    objectPick,
    onClickOutside,
    onElementRemoval,
    onKeyDown,
    onKeyPressed,
    onKeyStroke,
    onKeyUp,
    onLongPress,
    onStartTyping,
    pausableFilter,
    promiseTimeout,
    provideLocal,
    provideSSRWidth,
    pxValue,
    rand,
    reactify,
    reactifyObject,
    reactiveComputed,
    reactiveOmit,
    reactivePick,
    refAutoReset,
    refDebounced,
    refDefault,
    refThrottled,
    refWithControl,
    resolveRef,
    resolveUnref,
    set,
    setSSRHandler,
    StorageSerializers,
    syncRef,
    syncRefs,
    templateRef,
    throttleFilter,
    timestamp,
    toArray,
    toReactive,
    toRef,
    toRefs,
    toValue,
    TransitionPresets,
    tryOnBeforeMount,
    tryOnBeforeUnmount,
    tryOnMounted,
    tryOnScopeDispose,
    tryOnUnmounted,
    unrefElement,
    until,
    useActiveElement,
    useAnimate,
    useArrayDifference,
    useArrayEvery,
    useArrayFilter,
    useArrayFind,
    useArrayFindIndex,
    useArrayFindLast,
    useArrayIncludes,
    useArrayJoin,
    useArrayMap,
    useArrayReduce,
    useArraySome,
    useArrayUnique,
    useAsyncQueue,
    useAsyncState,
    useBase64,
    useBattery,
    useBluetooth,
    useBreakpoints,
    useBroadcastChannel,
    useBrowserLocation,
    useCached,
    useClipboard,
    useClipboardItems,
    useCloned,
    useColorMode,
    useConfirmDialog,
    useCountdown,
    useCounter,
    useCssVar,
    useCurrentElement,
    useCycleList,
    useDark,
    useDateFormat,
    useDebouncedRefHistory,
    useDebounceFn,
    useDeviceMotion,
    useDeviceOrientation,
    useDevicePixelRatio,
    useDevicesList,
    useDisplayMedia,
    useDocumentVisibility,
    useDraggable,
    useDropZone,
    useElementBounding,
    useElementByPoint,
    useElementHover,
    useElementSize,
    useElementVisibility,
    useEventBus,
    useEventListener,
    useEventSource,
    useEyeDropper,
    useFavicon,
    useFetch,
    useFileDialog,
    useFileSystemAccess,
    useFocus,
    useFocusWithin,
    useFps,
    useFullscreen,
    useGamepad,
    useGeolocation,
    useIdle,
    useImage,
    useInfiniteScroll,
    useIntersectionObserver,
    useInterval,
    useIntervalFn,
    useKeyModifier,
    useLastChanged,
    useLocalStorage,
    useMagicKeys,
    useManualRefHistory,
    useMediaControls,
    useMediaQuery,
    useMemoize,
    useMemory,
    useMounted,
    useMouse,
    useMouseInElement,
    useMousePressed,
    useMutationObserver,
    useNavigatorLanguage,
    useNetwork,
    useNow,
    useObjectUrl,
    useOffsetPagination,
    useOnline,
    usePageLeave,
    useParallax,
    useParentElement,
    usePerformanceObserver,
    usePermission,
    usePointer,
    usePointerLock,
    usePointerSwipe,
    usePreferredColorScheme,
    usePreferredContrast,
    usePreferredDark,
    usePreferredLanguages,
    usePreferredReducedMotion,
    usePreferredReducedTransparency,
    usePrevious,
    useRafFn,
    useRefHistory,
    useResizeObserver,
    useScreenOrientation,
    useScreenSafeArea,
    useScriptTag,
    useScroll,
    useScrollLock,
    useSessionStorage,
    useShare,
    useSorted,
    useSpeechRecognition,
    useSpeechSynthesis,
    useSSRWidth,
    useStepper,
    useStorage,
    useStorageAsync,
    useStyleTag,
    useSupported,
    useSwipe,
    useTemplateRefsList,
    useTextareaAutosize,
    useTextDirection,
    useTextSelection,
    useThrottledRefHistory,
    useThrottleFn,
    useTimeAgo,
    useTimeout,
    useTimeoutFn,
    useTimeoutPoll,
    useTimestamp,
    useTitle,
    useToggle,
    useToNumber,
    useToString,
    useTransition,
    useUrlSearchParams,
    useUserMedia,
    useVibrate,
    useVirtualList,
    useVModel,
    useVModels,
    useWakeLock,
    useWebNotification,
    useWebSocket,
    useWebWorker,
    useWebWorkerFn,
    useWindowFocus,
    useWindowScroll,
    useWindowSize,
    watchArray,
    watchAtMost,
    watchDebounced,
    watchDeep,
    watchIgnorable,
    watchImmediate,
    watchOnce,
    watchPausable,
    watchThrottled,
    watchTriggerable,
    watchWithFilter,
    whenever
} from "./chunk-B6YPYVPP.js";
import "./chunk-I4O5PVBA.js";
import "./chunk-BUSYA2B4.js";

export {
  DefaultMagicKeysAliasMap,
  StorageSerializers,
  TransitionPresets,
  assert,
  computedAsync as asyncComputed,
  refAutoReset as autoResetRef,
  breakpointsAntDesign,
  breakpointsBootstrapV5,
  breakpointsElement,
  breakpointsMasterCss,
  breakpointsPrimeFlex,
  breakpointsQuasar,
  breakpointsSematic,
  breakpointsTailwind,
  breakpointsVuetify,
  breakpointsVuetifyV2,
  breakpointsVuetifyV3,
  bypassFilter,
  camelize,
  clamp,
  cloneFnJSON,
  computedAsync,
  computedEager,
  computedInject,
  computedWithControl,
  containsProp,
  computedWithControl as controlledComputed,
  controlledRef,
  createEventHook,
  createFetch,
  createFilterWrapper,
  createGlobalState,
  createInjectionState,
  reactify as createReactiveFn,
  createRef,
  createReusableTemplate,
  createSharedComposable,
  createSingletonPromise,
  createTemplatePromise,
  createUnrefFn,
  customStorageEventName,
  debounceFilter,
  refDebounced as debouncedRef,
  watchDebounced as debouncedWatch,
  defaultDocument,
  defaultLocation,
  defaultNavigator,
  defaultWindow,
  computedEager as eagerComputed,
  executeTransition,
  extendRef,
  formatDate,
  formatTimeAgo,
  get,
  getLifeCycleTarget,
  getSSRHandler,
  hasOwn,
  hyphenate,
  identity,
  watchIgnorable as ignorableWatch,
  increaseWithUnit,
  injectLocal,
  invoke,
  isClient,
  isDef,
  isDefined,
  isIOS,
  isObject,
  isWorker,
  makeDestructurable,
  mapGamepadToXbox360Controller,
  noop,
  normalizeDate,
  notNullish,
  now,
  objectEntries,
  objectOmit,
  objectPick,
  onClickOutside,
  onElementRemoval,
  onKeyDown,
  onKeyPressed,
  onKeyStroke,
  onKeyUp,
  onLongPress,
  onStartTyping,
  pausableFilter,
  watchPausable as pausableWatch,
  promiseTimeout,
  provideLocal,
  provideSSRWidth,
  pxValue,
  rand,
  reactify,
  reactifyObject,
  reactiveComputed,
  reactiveOmit,
  reactivePick,
  refAutoReset,
  refDebounced,
  refDefault,
  refThrottled,
  refWithControl,
  resolveRef,
  resolveUnref,
  set,
  setSSRHandler,
  syncRef,
  syncRefs,
  templateRef,
  throttleFilter,
  refThrottled as throttledRef,
  watchThrottled as throttledWatch,
  timestamp,
  toArray,
  toReactive,
  toRef,
  toRefs,
  toValue,
  tryOnBeforeMount,
  tryOnBeforeUnmount,
  tryOnMounted,
  tryOnScopeDispose,
  tryOnUnmounted,
  unrefElement,
  until,
  useActiveElement,
  useAnimate,
  useArrayDifference,
  useArrayEvery,
  useArrayFilter,
  useArrayFind,
  useArrayFindIndex,
  useArrayFindLast,
  useArrayIncludes,
  useArrayJoin,
  useArrayMap,
  useArrayReduce,
  useArraySome,
  useArrayUnique,
  useAsyncQueue,
  useAsyncState,
  useBase64,
  useBattery,
  useBluetooth,
  useBreakpoints,
  useBroadcastChannel,
  useBrowserLocation,
  useCached,
  useClipboard,
  useClipboardItems,
  useCloned,
  useColorMode,
  useConfirmDialog,
  useCountdown,
  useCounter,
  useCssVar,
  useCurrentElement,
  useCycleList,
  useDark,
  useDateFormat,
  refDebounced as useDebounce,
  useDebounceFn,
  useDebouncedRefHistory,
  useDeviceMotion,
  useDeviceOrientation,
  useDevicePixelRatio,
  useDevicesList,
  useDisplayMedia,
  useDocumentVisibility,
  useDraggable,
  useDropZone,
  useElementBounding,
  useElementByPoint,
  useElementHover,
  useElementSize,
  useElementVisibility,
  useEventBus,
  useEventListener,
  useEventSource,
  useEyeDropper,
  useFavicon,
  useFetch,
  useFileDialog,
  useFileSystemAccess,
  useFocus,
  useFocusWithin,
  useFps,
  useFullscreen,
  useGamepad,
  useGeolocation,
  useIdle,
  useImage,
  useInfiniteScroll,
  useIntersectionObserver,
  useInterval,
  useIntervalFn,
  useKeyModifier,
  useLastChanged,
  useLocalStorage,
  useMagicKeys,
  useManualRefHistory,
  useMediaControls,
  useMediaQuery,
  useMemoize,
  useMemory,
  useMounted,
  useMouse,
  useMouseInElement,
  useMousePressed,
  useMutationObserver,
  useNavigatorLanguage,
  useNetwork,
  useNow,
  useObjectUrl,
  useOffsetPagination,
  useOnline,
  usePageLeave,
  useParallax,
  useParentElement,
  usePerformanceObserver,
  usePermission,
  usePointer,
  usePointerLock,
  usePointerSwipe,
  usePreferredColorScheme,
  usePreferredContrast,
  usePreferredDark,
  usePreferredLanguages,
  usePreferredReducedMotion,
  usePreferredReducedTransparency,
  usePrevious,
  useRafFn,
  useRefHistory,
  useResizeObserver,
  useSSRWidth,
  useScreenOrientation,
  useScreenSafeArea,
  useScriptTag,
  useScroll,
  useScrollLock,
  useSessionStorage,
  useShare,
  useSorted,
  useSpeechRecognition,
  useSpeechSynthesis,
  useStepper,
  useStorage,
  useStorageAsync,
  useStyleTag,
  useSupported,
  useSwipe,
  useTemplateRefsList,
  useTextDirection,
  useTextSelection,
  useTextareaAutosize,
  refThrottled as useThrottle,
  useThrottleFn,
  useThrottledRefHistory,
  useTimeAgo,
  useTimeout,
  useTimeoutFn,
  useTimeoutPoll,
  useTimestamp,
  useTitle,
  useToNumber,
  useToString,
  useToggle,
  useTransition,
  useUrlSearchParams,
  useUserMedia,
  useVModel,
  useVModels,
  useVibrate,
  useVirtualList,
  useWakeLock,
  useWebNotification,
  useWebSocket,
  useWebWorker,
  useWebWorkerFn,
  useWindowFocus,
  useWindowScroll,
  useWindowSize,
  watchArray,
  watchAtMost,
  watchDebounced,
  watchDeep,
  watchIgnorable,
  watchImmediate,
  watchOnce,
  watchPausable,
  watchThrottled,
  watchTriggerable,
  watchWithFilter,
  whenever
};
//# sourceMappingURL=vitepress___@vueuse_core.js.map
